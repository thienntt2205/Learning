<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ApprovalDBDAOsearchCompletelyUnapprovedCSRListRSQL">
			<desc><![CDATA[searchCompletelyUnapprovedCSRList]]></desc>
			<sql><![CDATA[
SELECT 
E.CSR_NO, E.APRO_RQST_NO, E.SUB_SYS_CD, E.OFC_CD
, DECODE(SIGN(E.N1ST_APPRED_KNT),1,'Y','N') N1ST_APPRED_YN
, DECODE(SIGN(E.N2ND_APPRED_KNT),1,'Y','N') N2ND_APPRED_YN
, @[usr_id] USR_ID, @[usr_id] CRE_USR_ID, @[usr_id] UPD_USR_ID, @[apro_evnt_desc] APRO_EVNT_DESC
, CASE 
  WHEN E.N1ST_APPRED_KNT > 0 AND E.N2ND_APPRED_KNT = 0 AND E.MAX_APRO_RQST_SEQ = 2 AND E.MAX_DFLT_APRO_SEQ = 1 
  THEN 'Y'
  WHEN E.N1ST_APPRED_KNT > 0 AND E.N2ND_APPRED_KNT = 0 AND E.MAX_APRO_RQST_SEQ = 2 AND E.MAX_DFLT_APRO_SEQ = 2 
        AND E.DFLT_CURR_CD IS NOT NULL AND NVL(E.DFLT_AMT,0) <> 0 AND NVL(E.DFLT_AMT,-1) >= NVL(E.CONV_CSR_AMT,0)
  THEN 'Y'
  ELSE 'N'
  END UPD_1ST_APRO_STEP_YN
FROM (
SELECT
C.CSR_NO, C.APRO_RQST_NO, D.SUB_SYS_CD, D.OFC_CD
, C.CSR_AMT, C.CSR_CURR_CD, C.GL_DT, D.CSR_CURR_CD DFLT_CURR_CD, D.CSR_AMT DFLT_AMT
, NVL(COM_CONV_CURR_FNC(C.CSR_CURR_CD, D.CSR_CURR_CD, C.CSR_AMT, SUBSTR(C.GL_DT,1,6)), 0) CONV_CSR_AMT
, NVL(C.N1ST_APPRED_KNT,0) N1ST_APPRED_KNT
, NVL(C.N2ND_APPRED_KNT,0) N2ND_APPRED_KNT
, 
CASE 
WHEN NVL(D.N1ST_USR_ID_GROUP,'########') <> NVL(C.N1ST_USR_ID_GROUP,'########')
THEN 'Y'
ELSE 'N'
END CHK_N1ST_DIFF
, 
CASE 
WHEN NVL(D.N2ND_USR_ID_GROUP,'########') <> NVL(C.N2ND_USR_ID_GROUP,'########')
THEN 'Y'
ELSE 'N'
END CHK_N2ND_DIFF
, D.N1ST_USR_ID_GROUP, D.N2ND_USR_ID_GROUP, C.MAX_APRO_RQST_SEQ, D.MAX_DFLT_APRO_SEQ
FROM (
    SELECT 
    E.APRO_ROUT_SEQ, E.SUB_SYS_CD, E.OFC_CD, E.CSR_CURR_CD, E.CSR_AMT,
    MAX(E.N1ST_USR_ID_GROUP) N1ST_USR_ID_GROUP, MAX(N2ND_USR_ID_GROUP) N2ND_USR_ID_GROUP, MAX(E.APRO_SEQ) MAX_DFLT_APRO_SEQ
    FROM (
        SELECT 
        D.APRO_ROUT_SEQ, D.SUB_SYS_CD, D.OFC_CD, D.CSR_CURR_CD, D.CSR_AMT
        , CASE WHEN D.APRO_SEQ = 1 THEN D.USR_ID_GROUP ELSE '' END N1ST_USR_ID_GROUP
        , CASE WHEN D.APRO_SEQ = 2 THEN D.USR_ID_GROUP ELSE '' END N2ND_USR_ID_GROUP
        , D.APRO_SEQ
        FROM (
            SELECT 
            A.APRO_ROUT_SEQ, B.APRO_SEQ, A.SUB_SYS_CD, A.OFC_CD, A.CSR_CURR_CD, A.CSR_AMT
            , LISTAGG(B.APRO_USR_ID,'||') WITHIN GROUP (ORDER BY B.APRO_SEQ, UPPER(B.APRO_USR_ID)) USR_ID_GROUP
            FROM COM_APRO_ROUT_DFLT A, COM_APRO_ROUT_DFLT_DTL B
            WHERE 1=1
            AND A.SUB_SYS_CD NOT IN ('FLT','JOO')
            AND A.SUB_SYS_CD = @[sub_sys_cd]
            AND A.OFC_CD = @[ofc_cd]
            AND NVL(A.DELT_FLG,'N') <> 'Y'
            AND A.APRO_ROUT_SEQ = B.APRO_ROUT_SEQ
            AND NVL(B.DELT_FLG,'N') <> 'Y'
            GROUP BY A.APRO_ROUT_SEQ, B.APRO_SEQ, A.SUB_SYS_CD, A.OFC_CD, A.CSR_CURR_CD, A.CSR_AMT
        ) D
    ) E
    GROUP BY E.APRO_ROUT_SEQ, E.SUB_SYS_CD, E.OFC_CD, E.CSR_CURR_CD, E.CSR_AMT
    ) D, (
    SELECT 
    E.CSR_NO, E.APRO_RQST_NO, E.SUB_SYS_CD, E.DFLT_APRO_OFC_CD
    , MAX(E.N1ST_USR_ID_GROUP) N1ST_USR_ID_GROUP, MAX(N2ND_USR_ID_GROUP) N2ND_USR_ID_GROUP
    , MAX(E.N1ST_APPRED_KNT) N1ST_APPRED_KNT, MAX(N2ND_APPRED_KNT) N2ND_APPRED_KNT
    , MAX(E.ROUT_APRO_RQST_SEQ) MAX_APRO_RQST_SEQ
    , E.CSR_AMT, E.CSR_CURR_CD, E.GL_DT
    FROM (
        SELECT 
        D.CSR_NO, D.APRO_RQST_NO, D.SUB_SYS_CD, D.DFLT_APRO_OFC_CD
        , CASE WHEN D.APRO_RQST_SEQ = 1 THEN D.USR_ID_GROUP ELSE '' END N1ST_USR_ID_GROUP
        , CASE WHEN D.APRO_RQST_SEQ = 2 THEN D.USR_ID_GROUP ELSE '' END N2ND_USR_ID_GROUP
        , CASE WHEN D.APRO_RQST_SEQ = 1 THEN D.NN_APPRED_KNT||'' ELSE '' END N1ST_APPRED_KNT
        , CASE WHEN D.APRO_RQST_SEQ = 2 THEN D.NN_APPRED_KNT||'' ELSE '' END N2ND_APPRED_KNT
        , D.APRO_RQST_SEQ ROUT_APRO_RQST_SEQ
        , D.CSR_AMT, D.CSR_CURR_CD, D.GL_DT
        FROM (
            SELECT 
            X.CSR_NO, X.APRO_RQST_NO, X.SUB_SYS_CD, X.DFLT_APRO_OFC_CD
            , R.APRO_RQST_SEQ
            , LISTAGG(R.APRO_USR_ID,'||') WITHIN GROUP (ORDER BY R.APRO_RQST_SEQ, UPPER(R.APRO_USR_ID)) USR_ID_GROUP    
            , X.NN_APPRED_KNT
            , X.CSR_AMT, X.CSR_CURR_CD, X.GL_DT
            FROM (
                SELECT 
                DISTINCT
                SUM(DECODE(RR.APSTS_CD,NULL,0,'',0,1)) OVER (PARTITION BY CD.CSR_NO, RR.APRO_RQST_SEQ) NN_APPRED_KNT,
                CD.CSR_NO, RH.APRO_RQST_NO, RH.SUB_SYS_CD, RH.DFLT_APRO_OFC_CD, RH.APSTS_CD, RR.APRO_RQST_SEQ, CD.COST_OFC_CD
                , A.CSR_AMT, A.CSR_CURR_CD, A.GL_DT
                FROM COM_APRO_RQST_HDR RH, COM_APRO_CSR_DTL CD, COM_APRO_RQST_ROUT RR, AP_INV_HDR A
                WHERE 1=1
                AND RH.SUB_SYS_CD NOT IN ('FLT','JOO')
                AND RH.SUB_SYS_CD = @[sub_sys_cd]
                AND RH.DFLT_APRO_OFC_CD = @[ofc_cd]
                AND NVL(RH.DELT_FLG,'N') <> 'Y'
                AND RH.APRO_RQST_NO = CD.APRO_RQST_NO
                AND NVL(CD.DELT_FLG,'N') <> 'Y'
                AND RH.APRO_RQST_NO = RR.APRO_RQST_NO
                AND RH.APSTS_CD = 'P'
                AND NVL(RR.DELT_FLG,'N') <> 'Y'
                AND RH.DFLT_APRO_OFC_CD IS NOT NULL
                AND CD.CSR_NO = A.CSR_NO
                AND A.IF_FLG IS NULL
                AND A.AFT_ACT_FLG IS NULL
                AND A.RCV_ERR_FLG IS NULL
                GROUP BY CD.CSR_NO, RH.APRO_RQST_NO, RH.SUB_SYS_CD, RH.DFLT_APRO_OFC_CD, RH.APRO_ROUT_SEQ, RH.APSTS_CD, RR.APRO_RQST_SEQ, RR.APSTS_CD
                ,CD.COST_OFC_CD, A.CSR_AMT, A.CSR_CURR_CD, A.GL_DT
            ) X, COM_APRO_RQST_ROUT R
            WHERE 1=1
            AND X.APRO_RQST_NO = R.APRO_RQST_NO
            AND X.APRO_RQST_SEQ = R.APRO_RQST_SEQ
            AND NVL(R.DELT_FLG,'N') <> 'Y'
            GROUP BY X.CSR_NO, X.APRO_RQST_NO, X.SUB_SYS_CD, X.DFLT_APRO_OFC_CD, R.APRO_RQST_SEQ, NN_APPRED_KNT, X.CSR_AMT, X.CSR_CURR_CD, X.GL_DT
            ) D
        ) E
        GROUP BY E.CSR_NO, E.APRO_RQST_NO, E.SUB_SYS_CD, E.DFLT_APRO_OFC_CD, E.CSR_AMT, E.CSR_CURR_CD, E.GL_DT
    ) C
WHERE 1=1
AND D.SUB_SYS_CD = C.SUB_SYS_CD
AND D.OFC_CD = C.DFLT_APRO_OFC_CD
) E
WHERE 1=1
AND (
        (NVL(E.N1ST_APPRED_KNT,0) = 0 AND NVL(E.CHK_N1ST_DIFF,'N') = 'Y')
        OR 
        (NVL(E.N2ND_APPRED_KNT,0) = 0 AND NVL(E.CHK_N2ND_DIFF,'N') = 'Y')
        OR
        (
            CASE 
            WHEN E.MAX_APRO_RQST_SEQ > 1 AND E.DFLT_CURR_CD IS NOT NULL AND NVL(E.DFLT_AMT,0) <> 0 AND NVL(E.DFLT_AMT,-1) >= NVL(E.CONV_CSR_AMT,0) 
            THEN 'Y' 
            ELSE 'N' 
            END = 'Y'
        )
    )
ORDER BY E.CSR_NO, E.APRO_RQST_NO			]]></sql>
			<params>
				<param name="usr_id" type="12" value="" out="N"/>
				<param name="apro_evnt_desc" type="12" value="" out="N"/>
				<param name="sub_sys_cd" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
