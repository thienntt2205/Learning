/*=========================================================
*Copyright(c) 2017 CyberLogitec. All Rights Reserved.
*@FileName 	 : VOP_SCG_5032.js
*@FileTitle  : Restriction Change History (Popup)
*@author     : CLT
*@version    : 1.0
*@since      : 2017/09/19
=========================================================*/
// common global variables 
var sheetObjects=new Array();
var sheetCnt=0;
var comboObjects = new Array();
var comboCnt = 0;
// Event handler processing by button click event*/
document.onclick=processButtonClick;
// Event handler processing by button name */
function processButtonClick(){
 var sheetObject=sheetObjects[0];
 var formObject=document.form;
	try {
		var srcName=ComGetEvent("name");
		if(ComGetBtnDisable(srcName)) return false;
		switch(srcName) {
			case "btn_retrieve":
             	doActionIBSheet(sheetObject,formObject,IBSEARCH);
            break;
			case "btn_close":
				ComClosePopup(); 
			break;  
        } // end switch
	}catch(e) {
		if( e == "[object Error]") {
			ComShowMessage(OBJECT_ERROR);
		} else {
			ComShowMessage(e.message);
		}
	}
}
/**
 * registering IBSheet Object as list 
 * adding process for list in case of needing batch processing with other items
 * defining list on the top of source
 */
function setSheetObject(sheet_obj){
	sheetObjects[sheetCnt++]=sheet_obj;
}
/**
 * Registering IBMultiCombo Object generated on Page to comboObject Array <br>
 * comboObjects Array is defined on the top of source. This function is called automatically when IBMultiCombo Object is generated by {@link CoObject#ComComboObject} <br>
 * @param {ibmulticombo} combo_obj    IBMultiCombo Object
 **/
function setComboObject(combo_obj) {
	comboObjects[comboCnt++] = combo_obj;
}
/**
 * initializing sheet 
 * implementing onLoad event handler in body tag 
 * adding first-served functions after loading screen. 
 */
function loadPage() {
    for(i=0;i<sheetObjects.length;i++){
        ComConfigSheet (sheetObjects[i]);
        initSheet(sheetObjects[i],i+1);
        ComEndConfigSheet(sheetObjects[i]);
    }
    doActionIBSheet(sheetObjects[0],document.form,IBSEARCH);
}

/**
 * setting sheet initial values and header <br>
 * adding case as numbers of counting sheets <br>
 * <br><b>Example :</b>
 * <pre>
 *     initSheet(sheetObj,1);
 * </pre>
 * @param {ibsheet} sheetObj Mandatory IBSheet Object
 * @param {int} sheetNo Mandatory IBSheet Object Tag's ID Serial No
 * @return N/A
 * @author 
 */
function initSheet(sheetObj,sheetNo) {
    var cnt=0;
    switch(sheetNo) {
        case 1:      //sheet1 init
            with(sheetObj){
	              var HeadTitle1="||No.|User ID|Name|Office|Change date/time|Current|Current|Previous|Previous";
	              var HeadTitle2="||No.|User ID|Name|Office|Change date/time|Currency|Amount|Currency|Amount";
	              SetConfig( { SearchMode:2, MergeSheet:5, Page:20, DataRowMerge:1 } );
	              var info    = { Sort:1, ColMove:1, HeaderCheck:0, ColResize:1 };
	              var headers = [ {Text:HeadTitle1, Align:"Center"},{Text:HeadTitle2, Align:"Center"} ];
	              InitHeaders(headers, info);
	              var cols = [{ Type:"Status", Hidden:1, Width:30, Align:"Center", ColMerge: 0, SaveName:"ibflag" },
	                     {Type:"Radio", Hidden:0, Width:30, Align:"left",   ColMerge:0, SaveName:'dummy',           KeyField:0, CalcLogic:"", Format:"", PointCount:0, UpdateEdit:1, InsertEdit:1 } , 
	                     {Type:"Seq",  Hidden:1, Width:40,  Align:"Center", ColMerge:0, SaveName:"seq",             KeyField:0, CalcLogic:"", Format:"", PointCount:0, UpdateEdit:0, InsertEdit:0 },
	                     {Type:"Text", Hidden:0, Width:100, Align:"Center", ColMerge:0, SaveName:"usr_id",          KeyField:0, CalcLogic:"", Format:"", PointCount:0, UpdateEdit:0, InsertEdit:0 },
	                     {Type:"Text", Hidden:0, Width:210, Align:"Left",   ColMerge:0, SaveName:"usr_nm",          KeyField:0, CalcLogic:"", Format:"", PointCount:0, UpdateEdit:0, InsertEdit:0 },
	                     {Type:"Text", Hidden:0, Width:80,  Align:"Center", ColMerge:0, SaveName:"ofc_cd",          KeyField:0, CalcLogic:"", Format:"", PointCount:0, UpdateEdit:0, InsertEdit:0 },
	                     {Type:"Text", Hidden:0, Width:130, Align:"Center", ColMerge:0, SaveName:"curr_amt_upd_dt", KeyField:0, CalcLogic:"", Format:"", PointCount:0, UpdateEdit:0, InsertEdit:0 },
	                     {Type:"Text", Hidden:0, Width:80,  Align:"Center", ColMerge:0, SaveName:"crnt_curr_cd",    KeyField:0, CalcLogic:"", Format:"", PointCount:0, UpdateEdit:0, InsertEdit:0 },
	                     {Type:"Float",Hidden:0, Width:125, Align:"Right",  ColMerge:0, SaveName:"crnt_amt",        KeyField:0, CalcLogic:"", Format:"", PointCount:2, UpdateEdit:0, InsertEdit:0 },
	                     {Type:"Text", Hidden:0, Width:80,  Align:"Center", ColMerge:0, SaveName:"pre_curr_cd",     KeyField:0, CalcLogic:"", Format:"", PointCount:0, UpdateEdit:0, InsertEdit:0 },
	                     {Type:"Float",Hidden:0, Width:125, Align:"Right",  ColMerge:0, SaveName:"pre_amt",         KeyField:0, CalcLogic:"", Format:"", PointCount:2, UpdateEdit:0, InsertEdit:0 }];
	              InitColumns(cols);
	              SetEditable(1);
	              SetSheetHeight(280);
                }
            break;
    }
}

/**
 * Handling IBSheet's process(Retrieve, Save) <br>
 * @param {ibsheet} sheetObj Mandatory IBSheet Object
 * @param {form}    formObj Mandatory html form object
 * @param {int}     sAction mandatory,Constant Variable
 **/
function doActionIBSheet(sheetObj,formObj, sAction) {
    switch(sAction) {
    	case IBSEARCH:
    		sheetObj.RemoveAll();
    		formObj.f_cmd.value=SEARCH;
    		sheetObj.DoSearch("COM_ENS_0Z2GS.do", FormQueryString(formObj) + "&" + ComGetPrefixParam("") );
    		break;
    }
}

function sheet1_OnSearchEnd(sheetObj) {
	with(sheetObj) {
		var start = HeaderRows();
		for(var i=start; i<start+RowCount(); i++) {
			if(GetCellValue(i, "crnt_curr_cd") == "JPY") {
				info = {Type:"Int", Align:"Right", Format:"NullInteger", PointCount:0};
				sheetObj.InitCellProperty(i, "crnt_amt", info);
			} 
			if(GetCellValue(i, "pre_curr_cd") == "JPY") {
				info = {Type:"Int", Align:"Right", Format:"NullInteger", PointCount:0};
				sheetObj.InitCellProperty(i, "pre_amt", info);
			} 
		}
	}
}